name: Deploy Supabase Edge Functions

on:
  push:
    branches: [ main, master ]
    paths:
      - 'police/supabase/functions/**'
      - 'supabase/functions/**'
      - '.github/workflows/supabase-functions.yml'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_ID }}
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Deploy functions from police directory (if present)
        if: ${{ hashFiles('police/supabase/functions/**') != '' }}
        run: |
          cd police
          supabase link --project-ref "$PROJECT_REF"
          # Set or update function environment variables (available to all functions)
          supabase secrets set SUPABASE_URL="$SUPABASE_URL" SUPABASE_ANON_KEY="$SUPABASE_ANON_KEY"
          for dir in supabase/functions/*/ ; do
            fn=$(basename "$dir")
            echo "Deploying function: $fn (police)"
            supabase functions deploy "$fn" --project-ref "$PROJECT_REF"
          done

      - name: Deploy functions from root supabase directory (if present)
        if: ${{ hashFiles('supabase/functions/**') != '' }}
        run: |
          supabase link --project-ref "$PROJECT_REF"
          # Set or update function environment variables (available to all functions)
          supabase secrets set SUPABASE_URL="$SUPABASE_URL" SUPABASE_ANON_KEY="$SUPABASE_ANON_KEY"
          for dir in supabase/functions/*/ ; do
            fn=$(basename "$dir")
            echo "Deploying function: $fn (root)"
            supabase functions deploy "$fn" --project-ref "$PROJECT_REF"
          done